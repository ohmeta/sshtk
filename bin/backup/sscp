#!/usr/bin/env python
import sys
import os
import subprocess
import pyotp
import argparse

def ArgsParser():
    parser = argparse.ArgumentParser(description="Copy files between local and cluster without OTP\n")
    parser.add_argument('files', metavar='Files', type=str, nargs="+",help='Files\n')
    parser.add_argument('-r', action="store_true", default= False, help='If copy a floder\n')

    args = parser.parse_args()
    return args

def Checking(ARGS):
    if not os.path.exists(ARGS.Source):
        print("Source not exist")
        sys.exit()
    if os.path.isdir(ARGS.Source) and (not ARGS.r):
        print("Source is a dirs")
        sys.exit()
    #
    if ARGS.r:
        print("Now copy a dir")
    else:
        print("Now copy a file")

def main():
    args = ArgsParser()
    files = args.files
    target_dir = files.pop()
    source_files = " ".join(files)
    #Checking(args)

    ID_code = ""
    PASSWORD = ""

    totp = pyotp.TOTP(ID_code)
    Verfied_code = totp.now()

    cmd_path = os.path.split(os.path.realpath(__file__))[0]
    cmd = f"expect {cmd_path}/auto.scp.expect {PASSWORD} {Verfied_code} {source_files} {target_dir}"

    subprocess.call(cmd,shell=True)

if __name__ == "__main__":
    main()
